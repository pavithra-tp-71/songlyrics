<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Song Lyrics</title>
    <link rel="stylesheet" href="css/style.css">
    <style>
        @import url('https://fonts.googleapis.com/css?family=Gochi+Hand&display=swap');
@import url('https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700&display=swap');

*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body{
    font-family: 'Gochi Hand', cursive;
    background: linear-gradient(to left, 
    rgb(40, 40, 40),
    rgb(40, 40, 40))
    
}
header{ 
    overflow: hidden;

    padding: 30px;
    background: linear-gradient(to right, 
                rgba(14, 236, 151, 0.65) ,
                rgba(128, 13, 223, 0.65)),
                url(../img/songl.jpeg);
    height: 90vh;
    width: 100vw;
    border: none;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    position: relative;
    clip-path: polygon(2% 11%, 3% 7%, 96% 16%, 96% 27%, 91% 79%, 10% 93%, 8% 89%);
    position: relative;
}

.container{
    position: absolute;
    color: white;
    font-size: 22px;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
}
.container h1{
    margin-bottom: 50px;
    letter-spacing: 2px;
    text-align: center;
}
form{
    position: relative;
    display: flex;
    width: 500px;
}
input{
    width: 100%;
    max-width: 100%;
    height: 45px;
    padding: 15px 30px;
    border-radius: 50px;
    border: none;
    outline: none;
}
button{
    width: 100px;
    max-width: 100%;
    /* height: 40px; */
    background: #9E2092;
    color: white;
    border-radius: 50px;
    border: none;
    position: absolute;
    right: 2px;
    bottom: 2px;
    top: 2px;
    font-weight: 600;
    outline: none;
}
button:hover{
    transform: scale(0.95);
}
li{
    list-style: none;
}

.result{
    color: white;
    text-align: center;
    font-family: 'Roboto Condensed', sans-serif;
    margin-top: 20px;
    position: relative;
    display: block;

}
#video{
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    display: block;
    margin-bottom: 50px;
    color: green;
    color: white;
    text-align: center;
    font-family: 'Roboto Condensed', sans-serif;
}
.song-list{
    list-style: none;
    display: flex;
    flex-direction: column;
    position: absolute;
    left: 50%;
    transform: translate(-50% ,0);
    background: linear-gradient(to left, 
    rgb(40, 40, 40),
    rgb(40, 40, 40))

}
.song-list li{
    margin-bottom: 20px;
    width: 500px;
    justify-content: space-evenly;
    letter-spacing: 1px;
    font-weight: 500;
    font-size: 18px;
    text-decoration: overline;
    text-decoration-color: rgb(12, 147, 100);
    position: relative;
    /* line-height: 30px; */
}

.song-list li::after{
    content: "";
    position: absolute;
    right: -20px;
    left: -20px;
    bottom: -4px;
    height: 3px;
    background: rgb(12, 147, 100);
    display: inline-block;
}
.song-list li div{
    float: left;
}

.song-list li span{
    float: right;
    background-color: #9E2092;
    border: 0;
    font-size: 12px;
    border-radius: 10px;
    color: #fff;
    cursor: pointer;
    font-weight: 400;
    padding: 4px 10px;
    text-transform: capitalize;
}
.btn{
    background-color: rgb(26, 170, 115);
    margin: 0 auto;
    border: 0;
    font-size: 14px;
    border-radius: 10px;
    color: rgb(199, 193, 193);
    cursor: pointer;
    font-weight: 400;
    padding: 6px 20px;
    width: 100px;
    text-transform: capitalize;
}


@media only screen and (max-width: 800px) {
    header{
        height: 70vh;
        width: 95%vw;
    }
    .container{
        font-size: 20px;
        
    }
    form{
        max-width: 300px;
    }
    input{
        width: 100%;
        height: 40px;
        padding: 12px 20px;
  
    }
    button{
        width: 80px;
        max-width: 100%;
    }
    .song-list li{
        margin-bottom: 15px;
        max-width: 300px;
        letter-spacing: 0.5px;
        font-size: 17px;
        
    }
   
    
  }

    </style>
</head>
<body>
    <header>
        <div class="container">
            <h1>Search lyric</h1>
            <form id="form"  autocomplete="off">
                <input type="text" id="search"  placeholder="Enter artist name or song title...">
                <button>Search</button>
            </form>
        </div>
       
    </header>
    <section id="video"></section>
    <section class="result" id="result">
        <h1>Results will be displayed here... </h1>
        
    </section>
    

<script type="text/javascript">
const form = document.getElementById('form')
const search = document.getElementById('search')
const result = document.getElementById('result')


/// api URL ///
const apiURL = 'https://api.lyrics.ovh';


/// adding event listener in form

form.addEventListener('submit', e=> {
    e.preventDefault();
    searchValue = search.value.trim()

    if(!searchValue){
        alert("There is nothing to search")
    }
    else{ 
        searchSong(searchValue)
    }
})


//search song 
async function searchSong(searchValue){
    const searchResult = await fetch(`${apiURL}/suggest/${searchValue}`)
    const data = await searchResult.json();

    // console.log(finaldata)
    showData(data)
}

//display final result in DO
function showData(data){
  
    result.innerHTML = `
    <ul class="song-list">
      ${data.data.map(song=> `<li>
                    <div>
                        <strong>${song.artist.name}</strong> -${song.title} 
                    </div>
                    <span data-artist="${song.artist.name}" data-songtitle="${song.title}"> get lyrics</span>
                </li>` )
        .join('')}
    </ul>
  `;
}




//event listener in get lyrics button
result.addEventListener('click', e=>{
    const clickedElement = e.target;

    //checking clicked elemet is button or not
    if (clickedElement.tagName === 'SPAN'){
        const artist = clickedElement.getAttribute('data-artist');
        const songTitle = clickedElement.getAttribute('data-songtitle');
        
        getLyrics(artist, songTitle)
    }
})

// Get lyrics for song
async function getLyrics(artist, songTitle) {
    const res = await fetch(`${apiURL}/v1/${artist}/${songTitle}`);
    const data = await res.json();
  
    const lyrics = data.lyrics.replace(/(\r\n|\r|\n)/g, '<br>');
  
    result.innerHTML= `<h2><strong>${artist}</strong> - ${songTitle} <p>${lyrics}</p></h2>`;
  
  
  }</script>

